// <auto-generated />
using System;
using MappingDemo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MappingDemo.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20210621163604_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MappingDemo.CustWithTotalClass", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSpent")
                        .HasColumnType("int");
                });

            modelBuilder.Entity("MappingDemo.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Name = "Julie"
                        },
                        new
                        {
                            CustomerId = 2,
                            Name = "Joanne"
                        });
                });

            modelBuilder.Entity("MappingDemo.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("LineItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("LineItem");

                    b.HasData(
                        new
                        {
                            LineItemId = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            LineItemId = 2,
                            OrderId = 1,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            LineItemId = 3,
                            OrderId = 2,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            LineItemId = 4,
                            OrderId = 3,
                            ProductId = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("MappingDemo.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            Date = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 1,
                            Date = new DateTime(2021, 6, 21, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 2,
                            Date = new DateTime(2021, 6, 21, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("MappingDemo.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Red Bicycle",
                            UnitPrice = 100m
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Blue gloves",
                            UnitPrice = 10m
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Green jersey",
                            UnitPrice = 20m
                        });
                });

            modelBuilder.Entity("MappingDemo.LineItem", b =>
                {
                    b.HasOne("MappingDemo.Order", null)
                        .WithMany("LineItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MappingDemo.Order", b =>
                {
                    b.HasOne("MappingDemo.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MappingDemo.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MappingDemo.Order", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
